SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;

---

SELECT SS_CUSTOMER_SK, SUM(ACT_SALES) SUMSALES
FROM
		(SELECT SS_ITEM_SK, SS_TICKET_NUMBER, SS_CUSTOMER_SK,
				CASE
								WHEN SR_RETURN_QUANTITY IS NOT NULL THEN (SS_QUANTITY - SR_RETURN_QUANTITY) * SS_SALES_PRICE
								ELSE (SS_QUANTITY * SS_SALES_PRICE)
				END ACT_SALES
			FROM STORE_SALES
			LEFT OUTER JOIN STORE_RETURNS ON (SR_ITEM_SK = SS_ITEM_SK
																																					AND SR_TICKET_NUMBER = SS_TICKET_NUMBER) ,REASON
			WHERE SR_REASON_SK = R_REASON_SK
					AND R_REASON_DESC = 'reason 28') T
GROUP BY SS_CUSTOMER_SK
ORDER BY SUMSALES, SS_CUSTOMER_SK
LIMIT 100;
